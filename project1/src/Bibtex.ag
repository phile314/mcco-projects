

imports
{
import CCO.Tree (ATerm (App), Tree (fromTree, toTree))
import CCO.Tree.Parser (parseTree, app, arg, list)
import Control.Applicative
}

{
type Key = String
}

data BibtexDb
    | BibtexDb entries :: {[BibtexEntry]}

data BibtexEntry
    | Entry etype :: String key :: Key emap :: KVList

type KVList = [ {(String, String)} ]

set Every = BibtexDb BibtexEntry
deriving Every : Show, Eq

{-attr BibtexDb
    syn html :: HtmlTree

sem BibtexEntry
  -}





{
--------------------------------------------------------------------------------
--- ATerm
--------------------------------------------------------------------------------

instance Tree BibtexDb where
  fromTree (BibtexDb es) = App "BibtexDb" [fromTree es]
  toTree = parseTree [app "BibtexDb" (BibtexDb <$> arg)]

instance Tree BibtexEntry where
  fromTree (Entry t k fv) = App "Entry" [fromTree t, fromTree k, fromTree fv]
  toTree = parseTree [app "Entry" (Entry <$> arg <*> arg <*> arg)]
}  
